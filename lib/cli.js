#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),commander_1=require("commander"),glob_1=require("glob"),index_1=require("./index"),path=tslib_1.__importStar(require("path")),program=new commander_1.Command,Bar=require("progress-barjs");function log(o,...e){o.output!=="-"&&console.log(...e)}async function generateGIF(o){const e={...program.opts()};if(o&&e.output){const t=glob_1.glob.sync(`${o}`,{absolute:!0});e.output!=="-"&&(e.output=path.resolve(e.output)),log(e,`${t.length} PNG image file${t.length!==1?"s":""} found!`);const u=Bar({label:"Convert to .gif",info:"Processing",total:t.length}),i=new index_1.GifskiCommand({...e,frames:t});if(e.output!=="-"){let a=0;i.on("progress",s=>{u.tickChunk(s.currentFrame-a),a=s.currentFrame})}const{err:r,stdout:n}=await i.run();if(r){console.error(r),process.exit(1);return}log(e,`\u{1F389} ${t.length} PNG image file${t.length!==1?"s have":"had"} been converted with success. \u{1F389}`),log(e,`GIF saved at: ${e.output}`),n instanceof Buffer&&process.stdout.write(n)}else{if(!o)throw Error("Empty glob pattern of PNG image files!");if(!e.output)throw Error("Empty output destination file path!")}}async function run(){program.argument("<pattern>","Glob pattern of PNG image files. Surround with quotes to define the glob pattern (example './test/**/*.png').").description(`Example: 
  gifski-command -Q 100 -o './test/video.gif' './test/**/video.mp4.frame*.png'
  gifski-command -o - './test/**/video.mp4.frame*.png' > './test/video.gif'`).requiredOption("-o, --output <a.gif>",'Destination file to write to; "-" means stdout').option("-r, --fps <num>","Frame rate of animation. This means the speed, as all frames are kept. [default: 20]").option("--fast","50% faster encoding, but 10% worse quality and larger file size").option("--extra","50% slower encoding, but 1% better quality").option("-Q, --quality <1-100>","Lower quality may give smaller file [default: 90]").option("-W, --width <px>","Maximum width. By default anims are limited to about 800x600").option("-H, --height <px>","Maximum height (stretches if the width is also set)").option("--no-sort","Use files exactly in the order given, rather than sorted").option("-q, --quiet","Do not display anything on standard output/console").option("--repeat <num>","Number of times the animation is repeated (-1 none, 0 forever or <value> repetitions)").action(generateGIF),await program.parseAsync()}run();