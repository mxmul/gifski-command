#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),commander_1=require("commander"),glob_1=require("glob"),index_1=require("./index"),path=tslib_1.__importStar(require("path")),program=new commander_1.Command,Bar=require("progress-barjs");function log(e,...t){e.output!=="-"&&!e.quiet&&console.log(...t)}async function generateGIF(e){const t={...program.opts()};if(e&&t.output){const o=glob_1.glob.sync(`${e}`,{absolute:!0});t.output!=="-"&&(t.output=path.resolve(t.output)),log(t,`${o.length} PNG image file${o.length!==1?"s":""} found!`);const i=new index_1.GifskiCommand({...t,frames:o});if(t.output!=="-"&&!t.quiet){const u=Bar({label:"Convert to .gif",info:"Processing",total:o.length});let s=0;i.on("progress",a=>{u.tickChunk(a.currentFrame-s),s=a.currentFrame})}const{err:n,stdout:r}=await i.run();if(n){console.error(n),process.exit(1);return}log(t,`\u{1F389} ${o.length} PNG image file${o.length!==1?"s have":"had"} been converted with success. \u{1F389}`),log(t,`GIF saved at: ${t.output}`),t.output==="-"&&r instanceof Buffer&&process.stdout.write(r)}else{if(!e)throw Error("Empty glob pattern of PNG image files!");if(!t.output)throw Error("Empty output destination file path!")}}async function run(){program.argument("<pattern>","Glob pattern of PNG image files. Surround the glob pattern with quotes (example './test/**/*.png').").description(`Example: 
  gifski-command -Q 100 -o './test/video.gif' './test/**/video.mp4.frame*.png'
  gifski-command -o - './test/**/video.mp4.frame*.png' > './test/video.gif'`).requiredOption("-o, --output <a.gif>",'Destination file to write to; "-" means stdout').option("-r, --fps <num>","Frame rate of animation. This means the speed, as all frames are kept. [default: 20]").option("--fast","50% faster encoding, but 10% worse quality and larger file size").option("--extra","50% slower encoding, but 1% better quality").option("-Q, --quality <1-100>","Lower quality may give smaller file [default: 90]").option("-W, --width <px>","Maximum width. By default anims are limited to about 800x600").option("-H, --height <px>","Maximum height (stretches if the width is also set)").option("--no-sort","Use files exactly in the order given, rather than sorted").option("-q, --quiet","Do not display anything on standard output/console").option("--repeat <num>","Number of times the animation is repeated (-1 none, 0 forever or <value> repetitions)").action(generateGIF),await program.parseAsync()}run();